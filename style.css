/* 选择所有元素以及它们的伪元素  Select all elements and their pseudo-elements */
*,
*::before,
*::after {
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
}

body {
  background-color: #333;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 1rem;
  overflow: hidden;
}

.modal-btn {
  border: 0;
  border-radius: 50%;
  height: 1.5rem;
  width: 1.5rem;
  cursor: pointer;
}

.modal-btn:hover {
  background-color: #aaaaaa;
  color: #ffffff;
}

.modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  transition: 200ms ease-in-out;
  border: 1px solid black;
  border-radius: 10px;
  z-index: 10;
  background-color: #333333;
  width: 500px;
  max-width: 80%;
  font-size: 1rem;
}

.modal.active {
  transform: translate(-50%, -50%) scale(1);
}

.modal-header {
  padding: 10px 15px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid #aaaaaa;
}

.modal-header .title {
  font-size: 1.25rem;
  font-weight: bold;
}

.modal-body {
  padding: 2rem;
}

#overlay {
  position: fixed;
  opacity: 0;
  transition: 200ms ease-in-out;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  pointer-events: none;
}

#overlay.active {
  opacity: 1;
  pointer-events: all;
}

#status-bar {
  display: flex;
  color: #dfebf3;
  justify-content: space-between;
  align-items: center;
  margin-top: 5rem;
  gap: 5vw;
}

.title {
  font-size: 3.5rem;
  flex: 2;
  font-weight: bold;
}

.score {
  font-size: 1.5rem;
  flex: 2;
}

#score {
  font-weight: bold;
}

#game-board {
  display: grid;
  /* "v"代表视口（viewport），而"min"表示选择视口的宽度和高度中较小的那个。 1vmin等于视口宽度和高度中较小值的1%。
  The "v" stands for viewport and the "min" selects the smaller of the width and height of the viewport. 1vmin is equal to 1% of the smaller of the width and height of the viewport.
  */
  grid-template-columns: repeat(var(--grid-size), var(--cell-size));
  grid-template-rows: repeat(var(--grid-size), var(--cell-size));
  background-color: #ccc;
  gap: var(--cell-gap);
  border-radius: 1vmin;
  padding: var(--cell-gap);
  position: relative;
  font-size: 7.5vmin;
  margin-bottom: 7rem;
}

.cell {
  background-color: #aaa;
  border-radius: 1vmin;
}

.tile {
  --x: 2;
  --y: 3;
  --background-lightness: 80%;
  --text-lightness: 20%;
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--cell-size);
  height: var(--cell-size);
  background-color: red;
  border-radius: 1vmin;
  /* In the calc() function, there should be spaces before and after the operator */
  top: calc(var(--y) * (var(--cell-size) + var(--cell-gap)) + var(--cell-gap));
  left: calc(var(--x) * (var(--cell-size) + var(--cell-gap)) + var(--cell-gap));
  font-weight: bold;
  /* 色相（Hue）、饱和度（Saturation）和亮度（Lightness） 200 hue is a blue type color */
  background-color: hsl(200, 50%, var(--background-lightness));
  color: hsl(200, 25%, var(--text-lightness));
  /*  a slow start and end with acceleration in the middle */
  animation: show 200ms ease-in-out;
  /*  define a transition effect when a CSS property changes from one value to another */
  transition: 100ms ease-in-out;
}

/* create keyframe animations in CSS, 0% represents the starting state of the animation */
@keyframes show {
  0% {
    opacity: 0.5;
    transform: scale(0);
  }
}
